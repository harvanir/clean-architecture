server:
  port: 8181
  tomcat:
    threads:
      max: 300
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/cleanarchitecture
    username: postgres
    password: postgres
    hikari:
      driver-class-name: org.postgresql.Driver
      connection-timeout: 30000
      maximum-pool-size: 300
      minimum-idle: 10
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-test-query: SELECT 1;
      validation-timeout: 28000
  jpa:
    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: true
    generate-ddl: false
    open-in-view: false
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
        format_sql: true
    #        cache: # uncomment to use 2nd cache
    #          use_query_cache: true
    #          provider_class: org.hibernate.cache.EhCacheProvider
    #          region:
    #            factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration
  jackson:
    time-zone: UTC
#logging:
#  level:
#    org.springframework.jdbc.core.BeanPropertyRowMapper: debug
#    org.springframework.jdbc.core.JdbcTemplate: debug
#    org.springframework.jdbc.core.StatementCreatorUtils: trace
#    org.springframework.data: trace
#    org.springframework.transaction: trace
#    org.hibernate.SQL: debug
#    org.hibernate: trace
app:
  retry:
    max-attempts: 1000
    delay: 1
    on-exceptions:
      - org.hibernate.StaleObjectStateException
      - org.springframework.orm.ObjectOptimisticLockingFailureException